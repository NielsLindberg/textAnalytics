{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"too",
				"toggleBounce"
			],
			[
				"spee",
				"speedMultiplicator"
			],
			[
				"y",
				"y"
			],
			[
				"header",
				"pageHeaderHeight"
			],
			[
				"bd",
				"bd+	border: ${1:1px} ${2:solid} ${3:#000};"
			],
			[
				"format",
				"formattedDescription"
			],
			[
				"formate",
				"formattedDates"
			],
			[
				"formatted",
				"formattedTitle"
			],
			[
				"formattedEm",
				"formattedEmployer"
			],
			[
				"formattedEmp",
				"formattedEmployerTitle"
			],
			[
				"card",
				"card-container"
			],
			[
				"bo",
				"text-bottom"
			]
		]
	},
	"buffers":
	[
		{
			"file": "cb1.py",
			"settings":
			{
				"buffer_size": 981,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cb1_2.py",
			"settings":
			{
				"buffer_size": 862,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cb2.py",
			"settings":
			{
				"buffer_size": 1733,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cb3.py",
			"settings":
			{
				"buffer_size": 188,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cb7.py",
			"settings":
			{
				"buffer_size": 938,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import collections\nfrom nltk.corpus import stopwords\nfrom nltk.corpus import movie_reviews\nfrom nltk.classify import NaiveBayesClassifier\nfrom nltk.classify.util import accuracy\n\n\ndef bag_of_words(words):\n    return dict([(word, True) for word in words])\n\n\ndef bag_of_words_not_in_set(words, badwords):\n    return bag_of_words(set(words) - set(badwords))\n\n\ndef bag_of_non_stopwords(words, stopfile='english'):\n    badwords = stopwords.words(stopfile)\n    return bag_of_words_not_in_set(words, badwords)\n\n\ndef label_feats_from_corpus(corp, feature_detector=bag_of_non_stopwords):\n    label_feats = collections.defaultdict(list)\n    # For Every Category in the Corpus\n    for label in corp.categories():\n\n        # For every file in all of the files with the category label\n        for fileid in corp.fileids(categories=[label]):\n\n            # add feutures from files to bagofwords\n            feats = feature_detector(corp.words(fileids=[fileid]))\n\n            # Add features to label_feats\n            label_feats[label].append(feats)\n    return label_feats\n\n\n# function that splits a list dicts at a cutoff percentage.\ndef split_label_feats(lfeats, split=0.75):\n    train_feats = []\n    test_feats = []\n    for label, feats in lfeats.items():\n        cutoff = int(len(feats) * split)\n\n        train_feats.extend([(feat, label) for feat in feats[:cutoff]])\n        test_feats.extend([(feat, label) for feat in feats[cutoff:]])\n    return train_feats, test_feats\n\n\nlfeats = label_feats_from_corpus(movie_reviews)\nprint(lfeats.keys())\n\ntrain_feats, test_feats = split_label_feats(lfeats, split=0.75)\nprint(len(train_feats))\nprint(len(test_feats))\n\nnb_classifier = NaiveBayesClassifier.train(train_feats)\nprint(nb_classifier.labels())\n\nnegfeat = bag_of_non_stopwords(['the', 'plot', 'was', 'ludicrous'])\nposfeat = bag_of_non_stopwords(['spaceman', 'stupid', 'clever',\n                                'matt', 'damon'])\n\nprint(negfeat)\nprint(posfeat)\n\nprint(nb_classifier.classify(negfeat))\nprint(nb_classifier.classify(posfeat))\nprint(accuracy(nb_classifier, test_feats))\n",
			"file": "cb7_2.py",
			"file_size": 2137,
			"file_write_time": 131215251951286795,
			"settings":
			{
				"buffer_size": 2069,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/nltk_data/corpora/custom/custom.txt",
			"settings":
			{
				"buffer_size": 419,
				"line_ending": "Windows",
				"name": "this is text file new orpicsd papsdll yooyoyo what"
			}
		},
		{
			"contents": "import collections, itertools\nimport nltk.classify.util, nltk.metrics\nfrom nltk.classify import NaiveBayesClassifier\nfrom nltk.corpus import movie_reviews, stopwords\nfrom nltk.collocations import BigramCollocationFinder\nfrom nltk.metrics import BigramAssocMeasures\nfrom nltk import precision, recall\nfrom nltk.probability import FreqDist, ConditionalFreqDist\n\ndef evaluate_classifier(featx):\n    negids = movie_reviews.fileids('neg')\n    posids = movie_reviews.fileids('pos')\n\n    negfeats = [(featx(movie_reviews.words(fileids=[f])), 'neg') for f in negids]\n    posfeats = [(featx(movie_reviews.words(fileids=[f])), 'pos') for f in posids]\n\n    negcutoff = int(len(negfeats)*3/4)\n    poscutoff = int(len(posfeats)*3/4)\n\n    trainfeats = negfeats[:negcutoff] + posfeats[:poscutoff]\n    testfeats = negfeats[negcutoff:] + posfeats[poscutoff:]\n\n    classifier = NaiveBayesClassifier.train(trainfeats)\n    refsets = collections.defaultdict(set)\n    testsets = collections.defaultdict(set)\n\n    for i, (feats, label) in enumerate(testfeats):\n            refsets[label].add(i)\n            observed = classifier.classify(feats)\n            testsets[observed].add(i)\n\n    print('accuracy:', nltk.classify.util.accuracy(classifier, testfeats))\n    print('pos precision:', precision(refsets['pos'], testsets['pos']))\n    print('pos recall:', recall(refsets['pos'], testsets['pos']))\n    print('neg precision:', precision(refsets['neg'], testsets['neg']))\n    print('neg recall:', recall(refsets['neg'], testsets['neg']))\n    classifier.show_most_informative_features()\n\ndef word_feats(words):\n    return dict([(word, True) for word in words])\n\nprint('evaluating single word features')\nevaluate_classifier(word_feats)\n\nword_fd = FreqDist()\nlabel_word_fd = ConditionalFreqDist()\n\nfor word in movie_reviews.words(categories=['pos']):\n    word_fd[word.lower()] += 1\n    label_word_fd['pos'][word.lower()] += 1\n\nfor word in movie_reviews.words(categories=['neg']):\n    word_fd[word.lower()] += 1\n    label_word_fd['neg'][word.lower()] += 1\n\n# n_ii = label_word_fd[label][word]\n# n_ix = word_fd[word]\n# n_xi = label_word_fd[label].N()\n# n_xx = label_word_fd.N()\n\npos_word_count = label_word_fd['pos'].N()\nneg_word_count = label_word_fd['neg'].N()\ntotal_word_count = pos_word_count + neg_word_count\n\nword_scores = {}\n\nfor word, freq in word_fd.items():\n    pos_score = BigramAssocMeasures.chi_sq(label_word_fd['pos'][word],\n        (freq, pos_word_count), total_word_count)\n    neg_score = BigramAssocMeasures.chi_sq(label_word_fd['neg'][word],\n        (freq, neg_word_count), total_word_count)\n    word_scores[word] = pos_score + neg_score\n\nbest = sorted(word_scores.items(), key=lambda w_s: w_s[1], reverse=True)[:10000]\nbestwords = set([w for w, s in best])\n\ndef best_word_feats(words):\n    return dict([(word, True) for word in words if word in bestwords])\n\nprint('evaluating best word features')\nevaluate_classifier(best_word_feats)\n\ndef best_bigram_word_feats(words, score_fn=BigramAssocMeasures.chi_sq, n=200):\n    bigram_finder = BigramCollocationFinder.from_words(words)\n    bigrams = bigram_finder.nbest(score_fn, n)\n    d = dict([(bigram, True) for bigram in bigrams])\n    d.update(best_word_feats(words))\n    return d\n\nprint('evaluating best words + bigram chi_sq word features')\nevaluate_classifier(best_bigram_word_feats)\n\n",
			"file": "sentimentor.py",
			"file_size": 3409,
			"file_write_time": 131214405014697668,
			"settings":
			{
				"buffer_size": 3321,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 213.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Cont",
				"Package Control: Install Package"
			],
			[
				"Autoprefix CSS",
				"Autoprefix CSS"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			]
		],
		"width": 462.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
			"install",
			"Autoprefix CSS",
			".jshintrc",
			"view.run_command(\"jshint\")",
			"$ bower install jquery",
			"bower install jquery",
			"npm install -g bower",
			"bower install jquery",
			"npm --version",
			"install --save polymer",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Workspace/CBS/BigSocialData/textAnalytics"
	],
	"file_history":
	[
		"/D/Workspace/CBS/BigSocialData/textAnalytics/sentimentor.py",
		"/D/Workspace/Udacity/pythonMovieWebsite/inheritance.py",
		"/D/Workspace/Udacity/pythonMovieWebsite/entertainment_center.py",
		"/D/Workspace/Udacity/pythonMovieWebsite/fresh_tomatoes.py",
		"/D/Workspace/Udacity/pythonMovieWebsite/media.py",
		"/D/workspace/Udacity/Twilio/twilooh.py",
		"/D/workspace/Udacity/pythonMovieWebsite/media.py",
		"/D/workspace/Udacity/Python/foundation.py",
		"/D/Workspace/codewars/java.js",
		"/D/Workspace/CBS/BigSocialData/textAnalytics/eneltekay.py",
		"/D/workspace/CBS/BigSocialData/textAnalytics/init.py",
		"/D/workspace/CBS/BigSocialData/textAnalytics/readme.txt",
		"/D/workspace/CBS/BigSocialData/textAnalytics/novel",
		"/D/Workspace/Udacity/frontend-nanodegree-feedreader/js/app.js",
		"/D/Workspace/Udacity/frontend-nanodegree-feedreader/README.md",
		"/D/Workspace/Udacity/frontend-nanodegree-feedreader/jasmine/spec/feedreader.js",
		"/D/Workspace/Udacity/mapApp/src/css/style.less",
		"/D/Workspace/Udacity/mapApp/src/index.html",
		"/D/Workspace/Udacity/mapApp/src/js/models/mapEntries.js",
		"/D/Workspace/Udacity/mapApp/src/js/main.js",
		"/D/Workspace/Udacity/mapApp/Gruntfile.js",
		"/D/Workspace/Udacity/mapApp/README.md",
		"/D/Workspace/Udacity/P5/frontend-nanodegree-arcade-game/js/engine.js",
		"/D/Workspace/Udacity/P5/frontend-nanodegree-arcade-game/js/app.js",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/D/Workspace/Udacity/P4/css/style.css",
		"/D/Workspace/CBS/yoprogram.py",
		"/D/Workspace/Udacity/frontend-nanodegree-arcade-game/js/app.js",
		"/D/Workspace/CBS/data.json",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/index.html",
		"/D/Workspace/CBS/yoyo.py",
		"/D/Workspace/CBS/quandl/WWDI.py",
		"/D/Workspace/Udacity/mapApp/src/js/mapStyles.js",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/Gruntfile.js",
		"/D/Workspace/Udacity/mapApp/bower.json",
		"/D/Workspace/Udacity/P4/js/builder.js",
		"/D/Workspace/CBS/quandl/test.py",
		"/D/Workspace/Udacity/P4/css/style.less",
		"/D/Workspace/QlikSense/amcharts/QlikSense.amCharts/amCombo/library/chalk.js",
		"/D/Workspace/Udacity/P4/js/map.js",
		"/D/Workspace/Udacity/mapApp/src/css/style.css",
		"/C/Users/Niels/Downloads/ScandinaviaLevel2new.kml",
		"/C/Users/Niels/Downloads/Scandinavia level 1.kml",
		"/D/Workspace/MapData/KML-zip_20160907044612.kml",
		"/C/Users/Niels/workspace/ConvertMapXMLtoCSV/src/temp/x.csv",
		"/C/Users/Niels/workspace/ConvertMapXMLtoCSV/src/style.xsl",
		"/C/Users/Niels/Downloads/DNK_adm2.rds",
		"/D/Workspace/MapData/DNK_adm_shp.zip",
		"/C/Users/Niels/Downloads/ScandinaviaLevel2.kml",
		"/C/Users/Niels/Downloads/Denmark divisions. Level 2.kml",
		"/C/Users/Niels/Downloads/Scandinavia level 2.kml",
		"/C/Users/Niels/Downloads/DNK_adm2.kmz",
		"/D/Workspace/Udacity/P4/js/edu.js",
		"/D/Workspace/Udacity/mapApp/bower_components/knockout/dist/knockout.js",
		"/D/Workspace/Udacity/boilerplate/src/css/style.css",
		"/D/Workspace/Udacity/boilerplate/src/js/main.js",
		"/D/Workspace/Udacity/mapApp/boilerplate/package.json",
		"/D/Workspace/Udacity/boilerplate/README.md",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/views/js/main.js",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/package.json",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/README.md",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/frontend-nanodegree-mobile-portfolio",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/views/css/style.css",
		"/D/Workspace/Udacity/boilerplate/package.json",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/project-mobile.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/views/pizza.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/project-webperf.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/project-2048.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/js/googleanal.js",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/project-webperf.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/src/project-mobile.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/views/pizza.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/views/css/style.css",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/project-2048.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/index.html",
		"/D/Workspace/Udacity/frontend-nanodegree-mobile-portfolio/dist/js/googleanal.js",
		"/D/Workspace/Udacity/udportfolio/Gruntfile.js",
		"/D/Workspace/Udacity/udportfolio/package.json",
		"/D/Workspace/Udacity/web-workers-demo/scripts/imageManips.js",
		"/D/Workspace/Udacity/web-workers-demo/scripts/worker.js",
		"/D/Workspace/Udacity/web-workers-demo/scripts/image-app.js",
		"/D/Workspace/Udacity/web-workers-demo/index.html",
		"/D/Workspace/Udacity/udportfolio/project-2048.html",
		"/D/Workspace/Udacity/udportfolio/css/mobile.css",
		"/D/Workspace/Udacity/udportfolio/css/style.css",
		"/D/Workspace/Udacity/udportfolio/js/perfmatters.js",
		"/D/Workspace/LTU/Assignment4/package.json",
		"/D/Workspace/Udacity/udportfolio/index.html",
		"/D/Workspace/Udacity/udportfolio/.gitignore",
		"/D/Workspace/Udacity/P4/Gruntfile.js",
		"/D/Workspace/Udacity/udportfolio/indexsrc.html",
		"/D/Workspace/Udacity/P5/frontend-nanodegree-arcade-game/index.html",
		"/D/Workspace/Udacity/P5/frontend-nanodegree-arcade-game/README.md",
		"/D/workspace/LTU/Assignment4/README.md",
		"/D/WoW Vanilla/realmlist.wtf",
		"/D/Workspace/Udacity/P4/css/optimized/less.style.css",
		"/D/Workspace/Udacity/P4/js/work.js",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/D/Workspace/Udacity/P4/js/bio.js",
		"/D/Workspace/Udacity/P4/projects.html",
		"/D/Workspace/Udacity/P4/index.html",
		"/D/Workspace/Udacity/P4/js/optimized/built.js",
		"/D/Workspace/Udacity/P4/js/projects.js",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/D/Workspace/Udacity/P4/js/footer.js",
		"/D/Workspace/Udacity/P4/.gitignore",
		"/D/Workspace/Udacity/P4/test/test",
		"/D/Workspace/Udacity/P4/css/optimized/less.style.min.css",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/CSScomb/Default.sublime-keymap",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/User/LESS.sublime-settings",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/LESS/LESS.sublime-settings",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/LESS/README.md",
		"/D/Workspace/Udacity/P4/css/optimized/style.min.css",
		"/C/Users/Niels/AppData/Roaming/Sublime Text 3/Packages/Color Highlighter/Default.sublime-keymap",
		"/D/Workspace/Udacity/P4/js/education.js",
		"/D/Workspace/frontend-nanodegree-resume/index.html",
		"/D/Workspace/frontend-nanodegree-resume/js/helper.js",
		"/D/Workspace/frontend-nanodegree-resume/js/resumeBuilder.js",
		"/D/Workspace/Udacity/P4/package.json",
		"/D/Workspace/Udacity/P4/js/optimized/built.min.js",
		"/D/workspace/udacity/p4/Gruntfile.js",
		"/D/Workspace/Udacity/P3/js/bio.js",
		"/D/Workspace/Udacity/P3/css/style.css",
		"/D/Workspace/adhoc/lele.js",
		"/D/Workspace/Udacity/P3/backup/index.html",
		"/D/Workspace/Udacity/responsivedesign/Start/main.css",
		"/D/Workspace/Udacity/responsivedesign/Start/responsive.css"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".flexbox > .flex-child > .",
			".flexbox > .flex-parent > .",
			".flexbox > .flex-parent > ",
			".flexbox > .flex-parent",
			"yelpview",
			"content-button",
			".content button",
			".content-button",
			"display",
			"#pano",
			"result-container",
			"yelp",
			"directionsDisplayList",
			"populateinfowindow",
			"itemLabelFilter",
			"console",
			"categoryColors",
			"category",
			"overflow",
			"mapEntryList",
			"food",
			"service",
			"<SimpleData name=\"NAME_2\"></SimpleData>",
			"<name>",
			"<Polygon>",
			"NAME_2",
			"embed",
			"tilesHeight",
			"tilesWidth",
			"topOffset",
			"numberOfEnemies",
			"speedMultiplicator",
			"tileswidth",
			"tilesHeight",
			"console",
			"titlesWidth",
			"titlesHeight",
			"101",
			"83",
			"titlesHeight",
			"505",
			"83",
			"background",
			"link",
			"center",
			"callback",
			"googlemap",
			"coin",
			"style",
			">: ",
			"> ",
			"Theyare",
			"  ",
			"really",
			"Family",
			"<div class=\"article\">\n<h1>Addams Family</h1>\n<p>They really are a scream the Addams Family.</p>\n<a href=\"#\">Read more +</a>\n</div>\n",
			"class",
			"About",
			"=\"#\">",
			"Home",
			"=\"#\">",
			"Home",
			"here",
			"border",
			"'",
			"\"",
			"'",
			"\""
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "cb1.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 981,
						"regions":
						{
						},
						"selection":
						[
							[
								292,
								292
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "cb1_2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 862,
						"regions":
						{
						},
						"selection":
						[
							[
								528,
								528
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "cb2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1733,
						"regions":
						{
						},
						"selection":
						[
							[
								1470,
								1477
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "cb3.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "cb7.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 938,
						"regions":
						{
						},
						"selection":
						[
							[
								210,
								210
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "cb7_2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2069,
						"regions":
						{
						},
						"selection":
						[
							[
								1464,
								1464
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/nltk_data/corpora/custom/custom.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 419,
						"regions":
						{
						},
						"selection":
						[
							[
								419,
								419
							]
						],
						"settings":
						{
							"auto_name": "this is text file new orpicsd papsdll yooyoyo what",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "sentimentor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3321,
						"regions":
						{
						},
						"selection":
						[
							[
								3321,
								3321
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai (SL).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 972.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sentimentAnalysis.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
